import{b as N,S as V,M as L,I as z,O as I,i as j,L as w,a as K}from"./mcumgr.D3BrboI9.js";import"./hoisted.5jgjDlby.js";const B=25;function W(e,t){e.push(t&255)}function $(e,t){e.push(t&255)}function A(e,t){e.push(t&255),e.push(t>>8&255)}function Y(e){const t=[];let n=0;for(const c in e){const o=parseInt(c,10);o>n&&(n=o);const i=e[c];for(const d of i){const a=d.note,r=d.state&1,m=d.velocity&127,y=r<<7|m,u=o;t.push({note:a,data:y,timeTicks:u})}}n+=1;const s=t.length;return{events:t,numEvents:s,loopLength:n}}function Z(e){const n=B,s=10*n*2,c=[],o=new Array(10*n).fill(0);let i=s;for(let a=0;a<s;a++)c.push(0);for(let a=0;a<10;a++){const r=e[a]||[];for(let m=0;m<n;m++){const y=r[m];if(y!=null){const u=Y(y),{events:v,numEvents:h,loopLength:D}=u,G=i-s;o[a*n+m]=G+1,A(c,D),$(c,h);for(const b of v)W(c,b.note),$(c,b.data),A(c,b.timeTicks);const H=3,O=h*4;i+=H+O}}}let d=0;for(let a=0;a<o.length;a++){const r=o[a];c[d++]=r&255,c[d++]=r>>8&255}return Uint8Array.from(c)}let g=new w("main",w.LEVEL_DEBUG);const E={initial:document.getElementById("initial-screen"),connecting:document.getElementById("connecting-screen"),connected:document.getElementById("connected-screen")},P=document.getElementById("device-name"),q=document.getElementById("button-connect"),J=document.getElementById("button-echo"),Q=document.getElementById("button-disconnect"),X=document.getElementById("button-reset"),ee=document.getElementById("button-image-state"),te=document.getElementById("button-erase"),R=document.getElementById("button-test"),C=document.getElementById("button-confirm"),F=document.getElementById("image-list"),S=document.getElementById("file-info"),k=document.getElementById("file-status"),_=document.getElementById("file-image"),T=document.getElementById("file-upload"),U=document.getElementById("bluetooth-is-available"),x=document.getElementById("bluetooth-is-available-message"),ne=document.getElementById("connect-block"),oe=document.getElementById("smp-group"),se=document.getElementById("smp-command"),ce=document.getElementById("smp-select"),ae=document.getElementById("smp-data"),le=document.getElementById("button-smp"),ie=document.getElementById("button-sampler");navigator&&navigator.bluetooth&&navigator.bluetooth.getAvailability()?(x.innerText="Bluetooth is available in your browser.",U.className="alert alert-success",ne.style.display="block"):(U.className="alert alert-danger",x.innerText="Bluetooth is not available in your browser.");let M=null,f=null,p=[];const l=new K;l.onConnecting(()=>{g.debug("Connecting..."),E.initial.style.display="none",E.connected.style.display="none",E.connecting.style.display="block"});l.onConnect(()=>{P.innerText=l.name,E.connecting.style.display="none",E.initial.style.display="none",E.connected.style.display="block",F.innerHTML=""});l.onDisconnect(()=>{P.innerText="Connect your device",E.connecting.style.display="none",E.connected.style.display="none",E.initial.style.display="block"});l.onMessage(({op:e,group:t,id:n,data:s,length:c})=>{if(g.debug(`Received SMP: op ${N[e]}, group ${t}, id ${n}, length ${c}`),s.rc!==void 0&&s.rc!==0){g.error(`Error: ${V[s.rc]}`),g.error(s);return}switch(t){case L.OS:switch(n){case I.ECHO:alert(s.r);break;case I.TASKSTAT:console.table(s.tasks);break;case I.MPSTAT:g.info(s);break}break;case L.IMAGE:switch(n){case z.STATE:p=s.images;let o="";p.forEach(i=>{o+=`<div class="image ${i.active?"active":"standby"}">`,o+=`<h2>Slot #${i.slot} ${i.active?"active":"standby"}</h2>`,o+="<table>";const d=Array.from(i.hash).map(a=>a.toString(16).padStart(2,"0")).join("");o+=`<tr><th>Version</th><td>v${i.version}</td></tr>`,o+=`<tr><th>Bootable</th><td>${i.bootable}</td></tr>`,o+=`<tr><th>Confirmed</th><td>${i.confirmed}</td></tr>`,o+=`<tr><th>Pending</th><td>${i.pending}</td></tr>`,o+=`<tr><th>Hash</th><td>${d}</td></tr>`,o+="</table>",o+="</div>"}),F.innerHTML=o,R.disabled=!(s.images.length>1&&s.images[1].pending===!1),C.disabled=!(s.images.length>0&&s.images[0].confirmed===!1);break}break;default:g.warning(`Unknown SMP response: group ${t}, id ${n}, op ${e}`),g.warning(s);break}});l.onImageUploadProgress(({percentage:e})=>{k.innerText=`Uploading... ${e}%`});l.onImageUploadFinished(()=>{k.innerText="Upload complete",S.innerHTML="",_.value="",l.cmdImageState()});_.addEventListener("change",()=>{M=_.files[0],f=null;const e=new FileReader;e.onload=async()=>{f=e.result;try{const t=await j(f);let n="<table>";n+=`<tr><th>Version</th><td>v${t.version}</td></tr>`,n+=`<tr><th>Hash</th><td>${t.hash}</td></tr>`,n+=`<tr><th>File Size</th><td>${f.byteLength} bytes</td></tr>`,n+=`<tr><th>Size</th><td>${t.imageSize} bytes</td></tr>`,n+="</table>",k.innerText="Ready to upload",S.innerHTML=n,T.disabled=!1}catch(t){S.innerHTML=`ERROR: ${t.message}`}},e.readAsArrayBuffer(M)});T.addEventListener("click",e=>{T.disabled=!0,e.stopPropagation(),M&&f&&l.cmdUpload(f)});q.addEventListener("click",async()=>{let t=[{namePrefix:"WAVY",services:["03B80E5A-EDE8-4B33-A751-6CE34EC4C700".toLowerCase()]}];await l.connect(t)});Q.addEventListener("click",async()=>{l.disconnect()});J.addEventListener("click",async()=>{const e=prompt("Enter a text message to send","Hello World!");await l.smpEcho(e)});X.addEventListener("click",async()=>{await l.cmdReset()});ee.addEventListener("click",async()=>{await l.cmdImageState()});te.addEventListener("click",async()=>{await l.cmdImageErase()});R.addEventListener("click",async()=>{p.length>1&&p[1].pending===!1&&await l.cmdImageTest(p[1].hash)});C.addEventListener("click",async()=>{p.length>0&&p[0].confirmed===!1&&await l.cmdImageConfirm(p[0].hash)});le.addEventListener("click",async()=>{let e=parseInt(oe.value),t=parseInt(se.value),n=parseInt(ce.value),s=ae.value.split(" ").map(r=>parseInt(r,16)),c=s.length,o=0,i=[c&255,c>>8&255,c>>16&255,c>>24&255],d=[o&255,o>>8&255,o>>16&255,o>>24&255],a=[...i,...d,...s];g.debug(`Sending SMP custom command: group group ${e}, command ${t}, op ${n}`),g.debug(a),await l.cmdCustom(e,t,n,a,!1)});ie.addEventListener("click",async()=>{const e={note:60,velocity:100,state:1},t={note:60,velocity:100,state:0},n={note:62,velocity:110,state:1},s={note:62,velocity:110,state:0},c={note:64,velocity:120,state:1},o={note:64,velocity:120,state:0},i={0:[e,n],12:[c],24:[t,s,o]},d={0:[c],16:[n],32:[e],48:[s,t,o]},a={0:[n],8:[c],16:[s,o]},r=[];for(let u=0;u<B;u++)r.push(null);r[0]=i,r[1]=d,r[2]=a;const m=[];m.push(r);for(let u=1;u<10;u++){const v=[];for(let h=0;h<B;h++)v.push(null);m.push(v)}const y=Z(m);console.log("Byte array length:",y.length),console.log(y)});
