import{M as L,S as w,a as p,I as _,O as g,i as C,L as I,b as R}from"./mcumgr.kHCPu6qC.js";import"./hoisted.5jgjDlby.js";let c=new I("main",I.LEVEL_DEBUG);const i={initial:document.getElementById("initial-screen"),connecting:document.getElementById("connecting-screen"),connected:document.getElementById("connected-screen")},v=document.getElementById("device-name"),A=document.getElementById("button-connect"),U=document.getElementById("button-echo"),D=document.getElementById("button-disconnect"),P=document.getElementById("button-reset"),H=document.getElementById("button-image-state"),x=document.getElementById("button-erase"),M=document.getElementById("button-test"),S=document.getElementById("button-confirm"),T=document.getElementById("image-list"),u=document.getElementById("file-info"),h=document.getElementById("file-status"),y=document.getElementById("file-image"),E=document.getElementById("file-upload"),B=document.getElementById("bluetooth-is-available"),f=document.getElementById("bluetooth-is-available-message"),G=document.getElementById("connect-block"),O=document.getElementById("smp-group"),V=document.getElementById("smp-command"),N=document.getElementById("smp-select"),z=document.getElementById("smp-data"),F=document.getElementById("button-smp");navigator&&navigator.bluetooth&&navigator.bluetooth.getAvailability()?(f.innerText="Bluetooth is available in your browser.",B.className="alert alert-success",G.style.display="block"):(B.className="alert alert-danger",f.innerText="Bluetooth is not available in your browser.");let b=null,r=null,d=[];const e=new R;e.onConnecting(()=>{c.debug("Connecting..."),i.initial.style.display="none",i.connected.style.display="none",i.connecting.style.display="block"});e.onConnect(()=>{v.innerText=e.name,i.connecting.style.display="none",i.initial.style.display="none",i.connected.style.display="block",T.innerHTML=""});e.onDisconnect(()=>{v.innerText="Connect your device",i.connecting.style.display="none",i.connected.style.display="none",i.initial.style.display="block"});e.onMessage(({op:t,group:n,id:o,data:s,length:m})=>{if(c.debug(`Received SMP: op ${L[t]}, group ${n}, id ${o}, length ${m}`),s.rc!==void 0&&s.rc!==0){c.error(`Error: ${w[s.rc]}`),c.error(s);return}switch(n){case p.OS:switch(o){case g.ECHO:alert(s.r);break;case g.TASKSTAT:console.table(s.tasks);break;case g.MPSTAT:c.info(s);break}break;case p.IMAGE:switch(o){case _.STATE:d=s.images;let a="";d.forEach(l=>{a+=`<div class="image ${l.active?"active":"standby"}">`,a+=`<h2>Slot #${l.slot} ${l.active?"active":"standby"}</h2>`,a+="<table>";const k=Array.from(l.hash).map($=>$.toString(16).padStart(2,"0")).join("");a+=`<tr><th>Version</th><td>v${l.version}</td></tr>`,a+=`<tr><th>Bootable</th><td>${l.bootable}</td></tr>`,a+=`<tr><th>Confirmed</th><td>${l.confirmed}</td></tr>`,a+=`<tr><th>Pending</th><td>${l.pending}</td></tr>`,a+=`<tr><th>Hash</th><td>${k}</td></tr>`,a+="</table>",a+="</div>"}),T.innerHTML=a,M.disabled=!(s.images.length>1&&s.images[1].pending===!1),S.disabled=!(s.images.length>0&&s.images[0].confirmed===!1);break}break;default:c.warning(`Unknown SMP response: group ${n}, id ${o}, op ${t}`),c.warning(s);break}});e.onImageUploadProgress(({percentage:t})=>{h.innerText=`Uploading... ${t}%`});e.onImageUploadFinished(()=>{h.innerText="Upload complete",u.innerHTML="",y.value="",e.cmdImageState()});y.addEventListener("change",()=>{b=y.files[0],r=null;const t=new FileReader;t.onload=async()=>{r=t.result;try{const n=await C(r);let o="<table>";o+=`<tr><th>Version</th><td>v${n.version}</td></tr>`,o+=`<tr><th>Hash</th><td>${n.hash}</td></tr>`,o+=`<tr><th>File Size</th><td>${r.byteLength} bytes</td></tr>`,o+=`<tr><th>Size</th><td>${n.imageSize} bytes</td></tr>`,o+="</table>",h.innerText="Ready to upload",u.innerHTML=o,E.disabled=!1}catch(n){u.innerHTML=`ERROR: ${n.message}`}},t.readAsArrayBuffer(b)});E.addEventListener("click",t=>{E.disabled=!0,t.stopPropagation(),b&&r&&e.cmdUpload(r)});A.addEventListener("click",async()=>{let n=[{namePrefix:"WAVY MONKEY",services:["03B80E5A-EDE8-4B33-A751-6CE34EC4C700".toLowerCase()]}];await e.connect(n)});D.addEventListener("click",async()=>{e.disconnect()});U.addEventListener("click",async()=>{const t=prompt("Enter a text message to send","Hello World!");await e.smpEcho(t)});P.addEventListener("click",async()=>{await e.cmdReset()});H.addEventListener("click",async()=>{await e.cmdImageState()});x.addEventListener("click",async()=>{await e.cmdImageErase()});M.addEventListener("click",async()=>{d.length>1&&d[1].pending===!1&&await e.cmdImageTest(d[1].hash)});S.addEventListener("click",async()=>{d.length>0&&d[0].confirmed===!1&&await e.cmdImageConfirm(d[0].hash)});F.addEventListener("click",async()=>{const t=parseInt(O.value),n=parseInt(V.value),o=parseInt(N.value),m=[8,0,...z.value.split(" ").map(Number)];c.debug(`Sending SMP custom command: group group ${t}, command ${n}, op ${o}`),c.debug(m),await e.cmdCustom(t,n,o,m,!1)});
