---
import '../styles/global.css';
import Layout from '../layouts/Layout.astro';
import Header from '../layouts/Header.astro';
---

<Layout title="Wavy Industries: device update">
	<main>
		<Header />
		<div id="screens">
			
			<div id="initial-screen" class="screen">
				<div id="bt-unavailable-screen" class="screen">
					<span class="error">It looks like your browser is not supported.</span><br/><br/>
					This tool is compatible with desktops (or laptops) with the <b>latest Chrome, Opera and Edge</b> browsers, and working
					Bluetooth connection (most laptops have them these days). You can also try it from Chrome on Android, or Bluefy on iOS/iPadOS.
				</div>
				<div id="bt-available-screen" class="screen">
					<span>Currently supports <b>WAVY MONKEY</b>.</span><br/><br/>
					<span class="remark">Make sure your device is not connected to anything before continuing. <br/>Is your device still not appearing in the list of nearby devices? Then press SHIFT + WAKE for a couple of seconds and the device will reboot.</span><br/><br/>
					<button id="button-connect" type="submit" class="btn btn-primary"><i class="bi-bluetooth"></i>Connect via Bluetooth</button>
				</div>
			</div>
			
			<div id="reconnect-screen" class="screen">
				<span class="remark">Waiting for device to reconnect..</span><br/><br/>
			</div>

			<div id="connected-screen" class="screen">
				<button id="button-disconnect" type="submit"><i class="bi-x-square"></i> Disconnect</button>
				<b><span id="device-name">unknown name</span></b>
				<p>
					Device firmware version: <span id="device-fw-version"></span><br/>
					Latest firmware version: <span id="latest-fw-version"></span>
				</p>
				<br/>

				<div id="update-waiting-screen" class="screen">
					<p>Waiting for device version...</p>
				</div>
				<div id="update-good-screen" class="screen">
					<span class="ok">Your device is up to date!</span>
				</div>
				<div id="update-idle-screen" class="screen">
					<span class="remark">Update is available!</span><br/>
					<button id="update-button" >Update now</button>
				</div>
				<div id="update-prepare-screen" class="screen">
					<span>Preparing update...</span>
				</div>
				<div id="update-uploading-screen" class="screen">
					Progress: <span id="upload-status"></span>
				</div>
				<div id="update-complete-screen" class="screen">
					<span class="ok">Transfer complete! Device will reboot and finish installation...</span>
				</div>
				
			</div>
		</div>
	</main>
</Layout>

<style>
#screens {
	margin-top: 50px;
	margin-left: 30px;
	margin-right: 30px;
}

p {
	font-size: 16px;
}
.remark {
	background-color: #E4E3DD;
}
.error {
	background-color: #FFD6D6;
}
.ok {
	background-color: #D6FFD6;
}
</style>

<script>
import {MCUManager, MGMT_GROUP_ID, OS_MGMT_ID, IMG_MGMT_ID} from '../js/mcumgr.js';
import {Screens} from '../js/screens.js';

const product_name = "MONKEY";
const product_revision = "r2";

const firmwareVerions = {
    "MONKEY": {
        "r1": "0.6.1",
        "r2": "0.6.2"
    }
}

const screens = new Screens('initial-screen');
const initialScreens = new Screens();
const updateScreens = new Screens('update-waiting-screen');

const connectButton = document.getElementById('button-connect');
const disconnectButton = document.getElementById('button-disconnect');

const deviceName = document.getElementById('device-name');
const deviceFWVersion = document.getElementById('device-fw-version');
const latestFWVersion = document.getElementById('latest-fw-version');

const updateButton = document.getElementById('update-button');
const uploadStatus = document.getElementById('upload-status');

if (navigator && navigator.bluetooth && navigator.bluetooth.getAvailability()) {
	initialScreens.set('bt-available-screen');
} else {
	initialScreens.set('bt-unavailable-screen');
}

const mcumgr = new MCUManager();
mcumgr.onConnecting(() => {
	console.log('Connecting...');
	connectButton.disabled = true;
	connectButton.innerText = 'Connecting...';
});
mcumgr.onConnect(() => {
	deviceName.innerText = mcumgr.name;
	mcumgr.cmdImageState();
	latestFWVersion.innerHTML = firmwareVerions[product_name][product_revision];
	screens.set('connected-screen')
});
mcumgr.onDisconnect(() => {
	connectButton.disabled = false;
	connectButton.innerText = 'Conncet via Bluetooth';
	screens.set('initial-screen')
});
mcumgr.onConnectionLoss(() => {
	screens.set('reconnect-screen')
});

mcumgr.onMessage(({ op, group, id, data, length }) => {
	switch (group) {
		case MGMT_GROUP_ID.OS:
			switch (id) {
				case OS_MGMT_ID.ECHO:
					alert(data.r);
					break;
				case OS_MGMT_ID.TASKSTAT:
					console.table(data.tasks);
					break;
				case OS_MGMT_ID.MPSTAT:
					console.log(data);
					break;
			}
			break;
		case MGMT_GROUP_ID.IMAGE:
			switch (id) {
				// get info about the current images. Figure out current image and version
				case IMG_MGMT_ID.STATE:					
					data.images.forEach(image => {
						if (image.active) {
							deviceFWVersion.innerHTML = image.version
							if (image.version == firmwareVerions[product_name][product_revision]) {
								updateScreens.set('update-good-screen');
							} else {
								updateScreens.set('update-idle-screen');
							}
						}
					})
					break;
			}
			break;
		default:
			console.log('Unknown group');
			break;
	}
});

mcumgr.onImageUploadProgress(({ percentage }) => {
	if (percentage != 0 && updateScreens.get() != 'update-uploading-screen') {
		updateScreens.set('update-uploading-screen');
	}
	uploadStatus.innerText = `${percentage}%`;
});

mcumgr.onImageUploadFinished(() => {
	// mcumgr.cmdImageState();
	updateScreens.set('update-complete-screen');
});

connectButton.addEventListener('click', async () => {
	const BT_MIDI_SERVICE_UUID = '03B80E5A-EDE8-4B33-A751-6CE34EC4C700'.toLowerCase()
	let filters = [{namePrefix: 'WAVY MONKEY', services: [BT_MIDI_SERVICE_UUID]}]
	await mcumgr.connect(filters);
});

disconnectButton.addEventListener('click', async () => {
	mcumgr.disconnect();
});

updateButton.addEventListener('click', async () => {
	try {
		updateScreens.set('update-prepare-screen');
		fetch(`/assets/firmware/${product_name}/${product_revision}/app\_update.bin`)
			.then(res => res.arrayBuffer())
			.then(res => {
				mcumgr.cmdUpload(res);
			})
	} catch (e) {
		updateScreens.set('update-idle-screen');
	}
});
</script>