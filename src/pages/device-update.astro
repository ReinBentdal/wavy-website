---
import '../styles/global.css';
import Layout from '../layouts/Layout.astro';
import Header from '../layouts/Header.astro';
import Footer from '../layouts/Footer.astro';

---

<Layout title="Wavy Industries: device update">
	<main>
		<Header />
		<div id="screens">
			
			<div id="initial-screen">
				<div id="bluetooth-is-available">
					This tool is compatible with desktops (or laptops) with the <b>latest Chrome, Opera and Edge</b> browsers, and working
					Bluetooth connection (most laptops have them these days). You can also try it from Chrome on Android, or Bluefy on iOS/iPadOS.
				</div>
				<div id="connect-block" style="display: none;">
					<span class="remark">Make sure your device is not connected to anything to be able to find it.</span><br/><br/>
					<button id="button-connect" type="submit" class="btn btn-primary"><i class="bi-bluetooth"></i>Find device</button>
				</div>
			</div>
			
			<div id="connected-screen" style="display: none;">
				<button id="button-disconnect" type="submit"><i class="bi-x-square"></i> Disconnect</button>
				<span id="device-name">unknown name</span>
				<p>
					Current firmware version: <span id="device-fw-version"></span><br/>
					Latest firmware version: <span id="latest-fw-version">0.6.1</span>
				</p>
				<br/>
				<spam class="remark">Updating is currently not implemented, coming very soon</span>
				<button>Update now</button>
				<p id="upload-status"></p>
				<!-- <hr />
				<h3>Image Upload</h3>
				<div class="form-group">
					<input type="file" class="form-control" id="file-image" />
				</div>
				<div class="image">
					<div class="form-group">
						<div id="file-status">Select image file (.img)</div>
						<div id="file-info"></div>
					</div>
					<button class="btn btn-primary" id="file-upload" disabled><i class="bi-upload"></i> Upload</button>
				</div> -->
			</div>
		</div>
		<!-- <Footer /> -->
	</main>
</Layout>

<style>
#screens {
	margin-top: 50px;
	margin-left: 30px;
	margin-right: 30px;
}

p {
	font-size: 16px;
}
.remark {
	background-color: #E4E3DD;
}
</style>

<script>
import {MCUManager, MGMT_GROUP_ID, OS_MGMT_ID, IMG_MGMT_ID} from '../js/mcumgr.js';

const screens = {
	initial: document.getElementById('initial-screen'),
	connected: document.getElementById('connected-screen')
};

const bluetoothIsAvailable = document.getElementById('bluetooth-is-available');
const connectBlock = document.getElementById('connect-block');
const connectButton = document.getElementById('button-connect');
const disconnectButton = document.getElementById('button-disconnect');

const deviceName = document.getElementById('device-name');
const deviceFWVersion = document.getElementById('device-fw-version');

const uploadStatus = document.getElementById('upload-status');
// const fileInfo = document.getElementById('file-info');
// const fileStatus = document.getElementById('file-status');
// const fileImage = document.getElementById('file-image');
// const fileUpload = document.getElementById('file-upload');

if (navigator && navigator.bluetooth && navigator.bluetooth.getAvailability()) {
	bluetoothIsAvailable.style.display = 'none';
	connectBlock.style.display = 'block';
}

let file = null;
let fileData = null;
let images = [];

function getUpdateFile(product_name, product_revision) {
	fetch('/firmware/MONKEY/r2/app\_update\_0.6.1.bin')
		.then(res => {
			console.log(res)
		})
}
getUpdateFile()

const mcumgr = new MCUManager();
mcumgr.onConnecting(() => {
	console.log('Connecting...');
	connectButton.disabled = true;

});
mcumgr.onConnect(() => {
	deviceName.innerText = mcumgr.name;
	screens.initial.style.display = 'none';
	screens.connected.style.display = 'block';
	connectButton.disabled = true;
	mcumgr.cmdImageState();
});
mcumgr.onDisconnect(() => {
	deviceName.innerText = 'unknown name';
	deviceFWVersion.innerHTML = '';
	screens.connected.style.display = 'none';
	screens.initial.style.display = 'block';
	connectButton.disabled = false;
});

mcumgr.onMessage(({ op, group, id, data, length }) => {
	switch (group) {
		case MGMT_GROUP_ID.OS:
			switch (id) {
				case OS_MGMT_ID.ECHO:
					alert(data.r);
					break;
				case OS_MGMT_ID.TASKSTAT:
					console.table(data.tasks);
					break;
				case OS_MGMT_ID.MPSTAT:
					console.log(data);
					break;
			}
			break;
		case MGMT_GROUP_ID.IMAGE:
			switch (id) {
				// get info about the current images. Figure out current image and version
				case IMG_MGMT_ID.STATE:
					images = data.images;
					
					images.forEach(image => {
						if (image.active) {
							deviceFWVersion.innerHTML = image.version
						}
					})
					break;
			}
			break;
		default:
			console.log('Unknown group');
			break;
	}
});

mcumgr.onImageUploadProgress(({ percentage }) => {
	uploadStatus.innerText = `${percentage}%`;
});

mcumgr.onImageUploadFinished(() => {
	// fileStatus.innerText = 'Upload complete';
	// fileInfo.innerHTML = '';
	// fileImage.value = '';
	mcumgr.cmdImageState();
});

// fileImage.addEventListener('change', () => {
// 	file = fileImage.files[0];
// 	console.log(file)
// 	fileData = null;
// 	const reader = new FileReader();
// 	reader.onload = async () => {
// 		fileData = reader.result;
// 		try {
// 			const info = await mcumgr.imageInfo(fileData);
// 			let table = `<table>`
// 			table += `<tr><th>Version</th><td>v${info.version}</td></tr>`;
// 			table += `<tr><th>Hash</th><td>${info.hash}</td></tr>`;
// 			table += `<tr><th>File Size</th><td>${fileData.byteLength} bytes</td></tr>`;
// 			table += `<tr><th>Size</th><td>${info.imageSize} bytes</td></tr>`;
// 			table += `</table>`;

// 			fileStatus.innerText = 'Ready to upload';
// 			fileInfo.innerHTML = table;
// 			fileUpload.disabled = false;
// 		} catch (e) {
// 			fileInfo.innerHTML = `ERROR: ${e.message}`;
// 		}
// 	};
// 	reader.readAsArrayBuffer(file);
// });
// fileUpload.addEventListener('click', event => {
// 	fileUpload.disabled = true;
// 	event.stopPropagation();
// 	if (file && fileData) {
// 		mcumgr.cmdUpload(fileData);
// 	}
// });

connectButton.addEventListener('click', async () => {
	const BT_MIDI_SERVICE_UUID = '03B80E5A-EDE8-4B33-A751-6CE34EC4C700'.toLowerCase()
	let filters = [{namePrefix: 'WAVY', services: [BT_MIDI_SERVICE_UUID]}]
	await mcumgr.connect(filters);
});

disconnectButton.addEventListener('click', async () => {
	mcumgr.disconnect();
});
</script>